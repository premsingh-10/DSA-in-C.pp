#include <iostream>
#include<bits/stdc++.h>
using namespace std;

#define V 4

#define INF 99999

void printsolution(int dist[][V]){
    cout <<"Matrix" << endl;
    for(int i = 0; i < V ;i++){
        for(int j = 0; j < V; j++){
            if(dist[i][j] == INF){
                cout << "INF" << " ";
            }
            else{
                cout <<dist[i][j] <<" ";
            }
        }
        cout << endl;
    }
}

void floydWarshall(int dist[][V]){
    int i,j,k;
    
    for(k = 0; k < V ;k++){
        for(i =0 ; i < V ; i++){
            for(j = 0; j <V;j++){
                if(dist[i][j] > (dist[i][k]+dist[k][j]) && dist[k][j] != INF && dist[i][k] != INF){
                    dist[i][j] = dist[i][k] + dist[k][j];
                }
            }
        }
    }
    printsolution(dist);
}

int main() {
    int graph[V][V] = { { 0, 5, INF, 10 },
                        { INF, 0, 3, INF },
                        { INF, INF, 0, 1 },
                        { INF, INF, INF, 0 } };
 
 
    floydWarshall(graph);
    return 0;


    return 0;
}
